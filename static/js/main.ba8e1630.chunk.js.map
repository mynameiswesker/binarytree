{"version":3,"sources":["scripts/line.js","App.js","reportWebVitals.js","index.js"],"names":["line","document","getElementsByClassName","App","useState","N","change_N","color","change_color","creater_dom_elements","node","createElement","li1","li2","div1","div2","classList","add","append","prepend","print_numbers","array_DIVs","getElementById","querySelectorAll","div","parentNode","onmousedown","event","detail","shiftX","clientX","getBoundingClientRect","left","shiftY","clientY","top","style","position","zIndex","border","body","moveAt","pageX","pageY","addEventListener","onMouseMove","onmouseup","removeEventListener","ondragstart","paint","array","delegate","delay","i","interval","setInterval","length","clearInterval","ArrayPlusDelay","elem","backgroundColor","to_connect","divs","arr","numbers","nextSibling","last_div","id","className","push","Math","log2","pow","innerHTML","shift","onClick","new_N","rootDIV","li","remove","dec","useEffect","lastChild","alone","print","uls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba8e1630.chunk.js","sourcesContent":["import LeaderLine from 'react-leader-line'\r\nexport function line(){\r\n\r\n    let divs = document.getElementsByClassName('circle')\r\n\r\n    let create_line = (from,to)=>{\r\n\r\n        let coord_from = from.getBoundingClientRect()\r\n        let coord_to = to.getBoundingClientRect()\r\n\r\n        let X_from = coord_from.x + coord_from.width/2 + 'px'\r\n        let Y_from = coord_from.y + coord_from.height + 'px'\r\n\r\n        let X_to = coord_to.x + coord_to.width/2 + 'px'\r\n        let Y_to = coord_to.y -2 + 'px'\r\n\r\n        //console.log(coord_from,coord_to)\r\n\r\n        let line1 = document.createElement('DIV')\r\n        line1.classList.add('line')\r\n        document.body.append(line1)\r\n        line1.style.left = X_from\r\n        line1.style.top = Y_from\r\n\r\n        let line2 = document.createElement('DIV')\r\n        line2.classList.add('line')\r\n        document.body.append(line2)\r\n        line2.style.left = X_to\r\n        line2.style.top = Y_to\r\n\r\n    }\r\n\r\n//опускаемся по пирамиде сверху вниз по левой и правой части\r\n\r\n    /* for(let div of divs){\r\n        \r\n        let from = div\r\n        if(div.parentNode.childNodes[1]){\r\n\r\n            let to1 = div.parentNode.childNodes[1].childNodes[0].childNodes[0]\r\n            let to2 = div.parentNode.childNodes[1].childNodes[1].childNodes[0]\r\n\r\n            create_line(from,to1)\r\n            create_line(from,to2)\r\n        }\r\n    } */\r\n    \r\n}\r\n\r\nexport default line","import './App.css';\nimport {useEffect,useState} from 'react'\nimport {line} from './scripts/line'\n\nfunction App() {\n\n  let [N,change_N] = useState(0)//число вложенностей\n  let [color,change_color] = useState('')\n\n  const print = ()=> {//подгатавливает дом элементы после загрузки страницы\n    let rootDIV = document.getElementById('rootDIV')//ul в котором все начинается\n\n    if(rootDIV.lastChild === null && N === 0){//если rootDIV пуст и N число вложеностей = 0 то добавить нулевой узел \n      let alone = document.createElement('DIV')\n      alone.classList.add('circle')\n      alone.innerHTML = 0\n      rootDIV.prepend(alone)\n    }\n\n    paint()\n\n    print_numbers()\n\n    return\n\n  }\n\n  let creater_dom_elements = ()=>{//ф-я создает узел ul+(2li+2div внутри)\n    let node = document.createElement('UL')\n    let li1 = document.createElement('LI')\n    let li2 = document.createElement('LI')\n    let div1 = document.createElement('DIV')\n    let div2 = document.createElement('DIV')\n    div1.classList.add('circle')\n    div2.classList.add('circle')\n    li1.append(div1)\n    li2.append(div2)\n    node.classList.add('node')\n    node.prepend(li1)\n    node.append(li2)\n\n    return node\n  }\n\n  let add = ()=>{//ф-я при +\n    let new_N = N+1\n    if(new_N < 0) return\n    change_N(new_N)\n\n    let rootDIV = document.getElementById('rootDIV')//div в котором все начинается\n\n    if(rootDIV.querySelectorAll('UL').length === 0){//если нет ни 1 дерева то создать 1 (частный случай)\n      rootDIV.append(creater_dom_elements())\n\n      print_numbers()\n\n      to_connect()\n\n      line()\n\n      return//\n    }\n\n    if(rootDIV.querySelectorAll('UL').length>=1){//ищем все ul в root если их больше 1 то\n      for(let li of rootDIV.querySelectorAll('LI')){//каждый li \n        if(li.querySelectorAll('UL').length === 0){//если у li нет потомков UL\n          li.append(creater_dom_elements())\n        }\n      }\n    }\n\n    print_numbers()\n\n    to_connect()\n\n    line()\n\n  }\n\n  let dec = ()=>{//ф-я при -\n    let new_N = N-1\n    if(new_N < 0) return\n    change_N(new_N)\n\n    let rootDIV = document.getElementById('rootDIV')//div в котором все начинается\n\n    if(rootDIV.querySelectorAll('DIV').length>0){\n      for(let div of rootDIV.querySelectorAll('DIV')){\n        if(div.nextSibling === null){\n          div.parentNode.parentNode.remove()//удаляем узел node(последний с конца)\n        }\n      }\n    }\n\n    print_numbers()  \n\n    to_connect()\n\n    line()\n    \n  }\n\n  let print_numbers = ()=>{//drug and drop (для любого кружка)\n\n    let array_DIVs = document.getElementById('rootDIV').querySelectorAll('DIV')\n\n    for(let div of array_DIVs){\n      let node = div.parentNode//узел для перемещения\n\n      //if(node.id === 'rootDIV') continue\n\n      div.onmousedown = (event)=>{\n        if(event.detail !== 2) return\n        let shiftX = event.clientX - node.getBoundingClientRect().left;\n        let shiftY = event.clientY - node.getBoundingClientRect().top;\n      \n        node.style.position = 'absolute'\n        node.classList.add('ismove')\n        node.style.zIndex = 1000;\n        node.style.border = 'thick solid #0000FF'\n        document.body.append(node)\n      \n        moveAt(event.pageX, event.pageY)\n      \n        function moveAt(pageX, pageY) {\n          node.style.left = pageX - shiftX + 'px'\n          node.style.top = pageY - shiftY + 'px'\n        }\n      \n        function onMouseMove(event) {\n          moveAt(event.pageX, event.pageY)\n        }\n      \n        document.addEventListener('mousemove', onMouseMove);\n      \n        node.onmouseup = function() {\n          node.style.border = 'none'\n          document.removeEventListener('mousemove', onMouseMove);\n          node.onmouseup = null\n        }\n      }\n      node.ondragstart = function() {\n        return false\n      }\n    }    \n\n  }\n///////////////////////////////////////////////////////////////////////////////////// \n\n/////////////////////////////////////раскрасить кружки//////////////////////////////\n  let paint = ()=>{\n    let array_DIVs = document.getElementsByClassName('circle')\n\n    for(let div of array_DIVs){\n      let node = div.parentNode//узел для перемещения\n\n      //if(node.id === 'rootDIV') continue\n\n      div.addEventListener('click',()=>{\n\n      ArrayPlusDelay(node.querySelectorAll('DIV'), (elem)=>{//добавим задержку для анимации\n        elem.style.backgroundColor = color\n      },100)\n\n      })\n    }\n  }\n////////////////////////////////////////////////////////////////////////////////////\n\n/////////////функция для задержки действий (анимация)///////////////////////////////\nfunction ArrayPlusDelay(array, delegate, delay) {\n  let i = 0\n  \n  var interval = setInterval(function() {\n\n      delegate(array[i]);\n      \n      if (i++ >= array.length - 1) clearInterval(interval)\n\n  }, delay)\n  \n}\n////////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////Добавляем нумирацию///////////////////////////////\n\nlet to_connect = () => {\n  let divs = document.getElementsByClassName('circle')\n\n  let arr = []//последние елементы массива\n\n  let numbers = []\n  \n  for(let div of divs){\n    if(div.nextSibling === null){\n      let last_div = div//последний див\n      let parent = last_div.parentNode.parentNode.parentNode.querySelectorAll('DIV')[0]//верхний главный див родителя\n\n      if(parent.id === 'root'){\n        continue\n      }\n\n      if(last_div.parentNode.parentNode.className === 'App'){\n        continue\n      }\n\n      arr.push(last_div)\n\n    }\n\n  }\n\n  for(let i=0; i<arr.length; i++){\n    numbers.push(i+1)\n  }\n\n  for(let i=0; i<numbers.length; i++){\n\n    if(numbers.length === 2){continue}\n\n    let N = Math.log2(numbers.length)\n\n    numbers[i] = numbers[i] + Math.pow(2,N) -2\n  }\n\n  for(let div of divs){\n    if(div.nextSibling === null){\n      let last_div = div//последний див\n      let parent = last_div.parentNode.parentNode.parentNode.querySelectorAll('DIV')[0]//верхний главный див родителя\n\n      if(parent.id === 'root'){\n        continue\n      }\n\n      if(last_div.parentNode.parentNode.className === 'App'){\n        continue\n      }\n\n      last_div.innerHTML = numbers[0]\n      numbers.shift()\n\n    }\n\n  }\n\n}\n\n/*********************Добавляем стрелки**********************/\n\n/////////////////////////////////////////////////////\n  return (\n    <div className=\"App\">\n\n      <div className='wrapp_top_menu'>\n\n        <div className='div_text'>\n          <p>Выбирете число вложенности N :</p>\n        </div>\n\n        <div className='div_change_N'>\n          <button onClick={()=>add()}>+</button>\n          <div>{N}</div>\n          <button onClick={()=>dec()}>-</button>\n        </div>\n\n      </div>\n\n      <div id='rootDIV' className='rootDIV'>\n        {useEffect(()=>{\n          print()\n        })}\n      </div>\n\n      <div className='info'>\n        <ul>\n          <li>1. Для переноса узлов используйте двойное нажатие мыши на \"кружок\" и удерживайте левую кнопку мыши</li>\n          <li>2. Что бы поменять цвет узлов - кликните 1 раз по \"кружку\"</li>\n        </ul>\n      </div>\n\n      <div className='colors'>\n        <p>3. Выбирете цвет</p>\n        <ul>\n          <li id='red' style={{backgroundColor:'red'}} onClick={()=>change_color('red')}></li>\n          <li id='green' style={{backgroundColor:'green'}} onClick={()=>change_color('green')}></li>\n          <li id='yellow' style={{backgroundColor:'yellow'}} onClick={()=>change_color('yellow')}></li>\n          <li id='blue' style={{backgroundColor:'blue'}} onClick={()=>change_color('blue')}></li>\n        </ul>\n      </div>\n\n      <div className='info_colors'>\n        <p>Выбранный цвет : </p>\n        <div style={{backgroundColor:color}} className='div_color'></div>\n      </div>\n\n      <div className='clear'>\n        <button \n          onClick={()=>{\n            let divs = document.getElementsByClassName('circle')\n            let uls = document.getElementsByClassName('node')\n            while(divs.length>0 && uls.length>0){\n              for(let div of divs){\n                div.remove()\n              }\n              for(let ul of uls){\n                ul.remove()\n              }\n              change_N(0)\n            }\n            return false\n          }}\n          >Очистить поле\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}